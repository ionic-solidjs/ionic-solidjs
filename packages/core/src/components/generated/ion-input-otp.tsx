// Auto-generated by scripts/generate.ts

import { defineCustomElement } from '@ionic/core/components/ion-input-otp';
import type { JSX as IonicJSX } from '@ionic/core';
import { type JSX as JSXBase, splitProps } from 'solid-js';
import type { FixIonProps } from '../../lib';

defineCustomElement();

export type IonInputOtpProps = FixIonProps<IonicJSX.IonInputOtp> &
	JSXBase.HTMLAttributes<HTMLIonInputOtpElement>

export function IonInputOtp(props: IonInputOtpProps) {
	const [ _, rest ] = splitProps(
		props,
		['autocapitalize', 'color', 'disabled', 'fill', 'inputmode', 'length', 'pattern', 'readonly', 'separators', 'shape', 'size', 'type', 'value']);
	const componentProps = () => ({
		'prop:autocapitalize': props.autocapitalize,
		'prop:color': props.color,
		'prop:disabled': props.disabled,
		'prop:fill': props.fill,
		'prop:inputmode': props.inputmode,
		'prop:length': props.length,
		'prop:pattern': props.pattern,
		'prop:readonly': props.readonly,
		'prop:separators': props.separators,
		'prop:shape': props.shape,
		'prop:size': props.size,
		'prop:type': props.type,
		'prop:value': props.value
	});

	return <ion-input-otp {...componentProps()} {...rest} />;
}
