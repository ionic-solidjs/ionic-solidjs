import * as fs from 'node:fs';
import { iconList } from './icon-list';

function iconTemplate(iconName: string) {
	console.log('Generating icon', iconName);
	const iconCamelCase = iconName.replace(/-([a-z])/g, (g) => g[1].toUpperCase());
	const iconPascalCase = iconCamelCase.charAt(0).toUpperCase() + iconCamelCase.slice(1);

	return `// Auto-generated by scripts/generate.ts

import { addIcons } from "ionicons";
import { ${iconCamelCase} } from "ionicons/icons";

addIcons({"${iconName}": ${iconCamelCase} });

export const icon${iconPascalCase} = "${iconName}";
`;
}

for (const icon of iconList) {
	fs.writeFileSync(`src/icons/${icon}.ts`, iconTemplate(icon));
}

fs.writeFileSync(
	'src/icons/index.ts',
	iconList.map((icon) => `export * from "./${icon}";`).join('\n')
);

// Update exports for each component in package.json
// function updatePackageJsonExports() {
// 	const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));
//
//
// 	for (const icon of iconList) {
// 		packageJson.exports[`./icons/${icon}`] = {
// 			import: `./icons/${icon}.mjs`,
// 			require: `./icons/${icon}.js`,
// 			default: `./icons/${icon}.js`,
// 			types: `./icons/${icon}.d.ts`,
// 		};
// 	}
//
// 	fs.writeFileSync('package.json', JSON.stringify(packageJson, null, 2));
// }

// updatePackageJsonExports();